@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="theme" />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Info" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Portal Core IT Brasil</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
        <MudSwitch @bind-Checked="@_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label=@Mode() />
        <AuthorizeView>
            <a style="color:white" href="Logout">Logout</a>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <NavMenu></NavMenu>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Small">

            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;
    private bool _isDarkMode;


    MudTheme theme = new MudTheme() { Palette = new Palette() { AppbarBackground = Colors.Indigo.Darken4 } };
    string Mode()
    {
        return _isDarkMode == true ? "Light Mode" : "Dark Mode";
    }
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    [CascadingParameter]
    private Task<AuthenticationState> authState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var state = await authState;
        var user = state.User;

        if (!user.Identity.IsAuthenticated)
            _drawerOpen = false;

    }
}